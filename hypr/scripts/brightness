#! /usr/bin/env bash

set -eu

# Constants
tag=bright_tag
icon_high="display-brightness-high-symbolic"
icon_medium="display-brightness-medium-symbolic"
icon_low="display-brightness-low-symbolic"
icon_error="dialog-error" # New icon for error message
brightness_step=10

# Function to handle errors and show an error notification
handle_error() {
	notify-send --app-name="System notification" --icon="$icon_error" -u critical -h string:x-dunst-stack-tag:$tag -h int:value:"0%" "Brightness Control Error" "Error adjusting brightness"
	logger -t brightness_control "Error adjusting brightness"
	exit 1
}

# Trap errors and call the error handling function
trap 'handle_error' ERR

# Argument handling
if [[ $# -ne 1 ]]; then
	echo "Usage: $0 <increase|decrease>" >&2
	exit 1
fi

case $1 in
increase)
	brightnessctl -q -d intel_backlight set +${brightness_step}%
	message="Brightness increased"
	;;
decrease)
	brightnessctl -q -d intel_backlight set ${brightness_step}%-
	message="Brightness decreased"
	;;
*)
	echo "Invalid argument: $1. Use 'increase' or 'decrease'." >&2
	exit 1
	;;
esac

# Get current and max brightness
cur_absolute="$(brightnessctl -d intel_backlight g)"
max_absolute="$(brightnessctl -d intel_backlight m)"

percentage=$(echo "$cur_absolute * 100 / $max_absolute " | bc)

if [[ $percentage -ge 66 ]]; then
	icon=${icon_high}
elif [[ $percentage -ge 33 ]]; then
	icon=${icon_medium}
else
	icon=${icon_low}
fi

# Show a notification for brightness change
notify-send --app-name="System notification" --icon="$icon" -h string:x-dunst-stack-tag:$tag -h int:value:"${percentage}%" "Brightness" "${percentage}%"

# Log the action
logger -t brightness_control "$message: ${new_percentage}%"

exit 0
